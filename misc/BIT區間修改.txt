//BIT區間修改
ll n=1000005,sum1[1000005],sum2[1000005],m,q,is,x,y,v;
void add(ll p, ll x){
    for(int i = p; i <= n; i += i & -i)
        sum1[i] += x, sum2[i] += x * p;
}
void range_add(ll l, ll r, ll x){
    add(l, x), add(r + 1, -x);
}
ll ask(ll p){
    ll res = 0;
    for(int i = p; i; i -= i & -i)
        res += (p + 1) * sum1[i] - sum2[i];
    return res;
}
ll range_ask(ll l, ll r){
    return ask(r) - ask(l - 1);
} 
int main(){
	cin >> m >> q;
	for(int i=0;i<m;++i){
		cin >> v;
		add(i+1,v);
		add(i+2,-v);//build 
	}
	for(int i=0;i<q;++i){
		cin >> is >> x >> y;
		if(is==1){//1 l r v
			cin >> v;
			range_add(x,y,v);
		}
		else{
			cout << range_ask(x,y) << "\n";
		}
	}
}

typedef long long ll;//but wa
    struct bit{
        int sz;
        vector<ll>p,p2;
        int lowbit(int n){return n&(-n);}
        void u(int n,ll val){
            n++;
            for(int i=n;i<=sz;i+=lowbit(n))
                p[i]+=val,p2[i]+=n*val;
        }
        ll q(int n){
            ll ans=0;
            n++;
            for(int i=n;i;i-=lowbit(i))
                ans+=p[i]*(n+1)-p2[i];
            return ans;
        }
        void update(int l,int r,ll val){u(l,val),u(r+1,-val);};
        ll query(int l,int r){return q(r)-q(l-1);}
        bit(int n){
            sz=n;
            p=p2=vector<ll>(n+2);
        }
    };
