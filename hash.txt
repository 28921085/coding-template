typedef long long ll;
    struct hash{
        ll md1,p1,md2,p2;
        vector<ll>val1,val2,pn1,pn2;
        ll cal(int l,int r,int num){
            if(num==1)
                return ((val1[r+1]+md1-val1[l]*pn1[r-l+1])%md1+md1)%md1;
            return ((val2[r+1]+md2-val2[l]*pn2[r-l+1])%md2+md2)%md2;
        }
        ll val(int l,int r){
            return cal(l,r,1)*2e9+cal(l,r,2);
        }
        void add(char c){
            val1.push_back((val1.back()*p1+c)%md1);
            val2.push_back((val2.back()*p2+c)%md2);
            pn1.push_back((pn1.back()*p1)%md1);
            pn2.push_back((pn2.back()*p2)%md2);
        }
        hash(string str){
            val1={1},val2={1};
            pn1={1},pn2={1};
            md1=1e9+7,p1=53;
            md2=1e9+9,p2=31;
            for(auto i:str){
                val1.push_back((val1.back()*p1+i)%md1);
                val2.push_back((val2.back()*p2+i)%md2);
                pn1.push_back((pn1.back()*p1)%md1);
                pn2.push_back((pn2.back()*p2)%md2);
            }
        }
    };